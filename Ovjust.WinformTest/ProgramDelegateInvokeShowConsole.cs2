using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;

namespace Ovjust.WinformTest
{
    static class Program
    {
        /// <summary>
        /// 应用程序的主入口点。
        /// </summary>
        [STAThread]
        static void Main()
        {
            OnStart();
            TestMethod1();
        }

        public delegate int AddHandler(int a, int b);
        public class 加法类
        {
            public static int Add(int a, int b)
            {
                Console.WriteLine("开始计算：" + a + "+" + b);
                Thread.Sleep(2000); //模拟该方法运行三秒
                Console.WriteLine("计算完成！");
                return a + b;
            }
        }

        [DllImport("kernel32.dll")]
        static extern bool AllocConsole();
        [DllImport("kernel32.dll")]
        static extern bool AttachConsole(int dwProcessId);
        private const int ATTACH_PARENT_PROCESS = -1;


        //[TestInitialize]
        public static void OnStart()
        {
            System.Diagnostics.Process.Start("cmd.exe", "/k echo '程序调试结果信息！'");
            //AllocConsole();
            //AttachConsole(ATTACH_PARENT_PROCESS);
        }

        //[TestMethod]
        public static void TestMethod1()
        {
            Console.WriteLine("===== 同步调用 SyncInvokeTest =====");
            AddHandler handler = new AddHandler(加法类.Add);
            int result = handler.Invoke(1, 2);

            Console.WriteLine("继续做别的事情。。。");

            Console.WriteLine(result);
            //Console.ReadKey();
        }
    }
}
